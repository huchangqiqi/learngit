* c 语言的声明
1.找到最左边的标识符
2.右边的下一个符号，[ 表示。。。的数组
3.( 表示返回。。。的函数
4.左边的符号 （ 表示把已经处理的声明组合在一起，直到遇见 ) 
  然后重复第 2 步
5.左边的符号 是 
              # const          只读
              # volatile       容易变的 编译器不会使用寄存器里的备份，重新读取
              # *              指向。。。的指针
 然后重复第 4 步
6.剩下的形成声明的基本类型

例子：
char * const * (* next)();
char * ( * c[10])(int **p);

* 数组和指针并不相同

1.数组下标引用
  char a[9] = "abcdefgh";
  c = a[i];
2.指针的引用
  char * p; 
  c = *p;
3.指针的下标引用
  char *p = "abcdefgh";
  c = p[i]; 

指针可以用字符串常量初始化
char *p = "breadfruit";
float *pip = 3.141; /*错误 ！ 无法通过编译*/
指针初始化创建的字符串常量被定义为只读
字符串常量初始化的数组是可以修改的


